{
  "page.index.hi": "你好！",
  "page.index.one": "你可以叫我",
  "page.index.name": "老刘",
  "page.index.two": "本人从事java后端和web3合约开发，是一个有比较多想法，热爱分享和热爱学习新技术的人！",
  "page.index.three": "如果想要联系我，可以通过telegram飞机联系我！",
  "page.index.four": "工作技能",
  "page.index.about": "关于我",
  "page.index.home": "主页",
  "page.index.five": "本人比较熟悉eth公链，bnb公链，以及apt公链，对lp质押以及swap都有过深入了解，V2swap兑换等。",
  "page.index.skill": "技术",
  "page.index.solidity.one": " 1、熟练掌握 Solidity编程语言，了解合约的结构、函数、变量声明等基本语法。",
  "page.index.solidity.two": " 2、了解 Solidity 中的数据类型、控制结构、函数修饰符等。",
  "page.index.solidity.three": " 3、能够编写智能合约，包括 ERC-20、ERC-721 等标准合约。",
  "page.index.solidity.four": " 4、了解智能合约的生命周期、部署、调用等。",
  "page.index.solidity.five": "  5、了解以太坊区块链网络的基本原理和运作机制。",
  "page.index.solidity.six": " 6、知道如何连接以太坊网络，选择合适的节点服务。",
  "page.index.solidity.seven": " 7、掌握 Web3.js 或 Ethers.js 等以太坊 JavaScript库，以便与以太坊区块链进行交互。",
  "page.index.solidity.eight": " 8、能够通过库调用合约函数，查询状态和发送交易。",
  "page.index.solidity.nine": " 9、熟悉 Hardhat 等 Solidity开发框架，用于合约的编译、测试和部署。",
  "page.index.solidity.ten": " 10、了解智能合约的安全性问题，避免常见的漏洞，如重入攻击、溢出等。",
  "page.index.solidity.eleven": " 11、使用工具进行代码审计，确保合约的安全性。",
  "page.index.solidity.twelve": " 12、优化智能合约的 gas 消耗，提高合约的执行效率。",
  "page.index.solidity.thirteen": " 13、了解 gas 价格和 gas 上限的概念。",
  "page.index.java.one": " 1、熟悉SpringEoot、SpringCloud、SpringCloudAlibaba.微服务框架体系及套件，熟悉服务注册与发现、服务限流、降级、熔断，并且有线上经验，了解常用的高并发解决方案。",
  "page.index.java.two": "  2、熟练掌握数据库SQL语言编写、调优，对事务、索引，拥有线上慢SQL优化实际经验。",
  "page.index.java.three": "3、深入了解reds.缓存各类数据结构的使用场合，理解高可用集群，了解掌握reds.分布式锁的使用，熟悉持久化、集群。",
  "page.index.java.four": " 4、熟悉常见的 Web 开发概念，包括 HTTP 协议、RESTful架构等。",
  "page.index.java.five": " 5、对现代的前端框架（如 React、Angular 或Vue.js）有基本了解。",
  "page.index.java.six": "6、了解和实践微服务架构，包括服务发现、容器化（Docker）、容器编排（Kubernetes）等",
  "page.index.java.seven": "7、熟练使用消息MQ组件进行异步化处理、熟悉ACK消息确认机制、消息丢失、消息顺序性、重复消费。",
  "page.index.java.eight": " 8、熟悉常见的安全漏洞和防范措施，包括跨站脚本（XSS）、跨站请求伪造（CSRF）等。",
  "page.index.java.nine": " 9、实施身份验证和授权，了解 OAuth 和 JWT。",
  "page.index.java.ten": " 10、熟悉版本控制工具，如 Git。",
  "page.index.java.eleven": " 11、熟悉linux，基本操作部署命令，掌握docker的常用命令，了解掌握项目代码从编译，构建镜像，再到k8s集群容器的构建。",
  "page.index.java.twelve": "12、熟悉分布式事务解決方案，对分布式CAP理论、BASE理论有深入的理解；熟悉刚性事务2PC、3PC、柔性事务TCC、本地消息表、独立消息服务分布式事务、可靠消息最终一致、最大努力通知等实现方案。",
  "page.index.sql.one": "1、熟练掌握 SQL（Structured QueryLanguage），包括对数据的增、删、改、查等基本操作。",
  "page.index.sql.two": "  2、了解复杂查询、连接、子查询等高级 SQL 操作。",
  "page.index.sql.three": "3、能够设计规范的数据库模型，包括表的设计、关系建立、索引的使用等。",
  "page.index.sql.four": "4、了解范式化和反范式化的概念。",
  "page.index.sql.five": " 5、了解索引的类型（如 B树索引、哈希索引）及其在数据库查询性能优化中的作用。",
  "page.index.sql.six": "  6、能够选择合适的字段创建索引，避免滥用索引",
  "page.index.sql.seven": "7、理解数据库事务的概念，掌握事务的 ACID 特性。",
  "page.index.sql.eight": "8、能够正确使用事务，确保数据的一致性和完整性。",
  "page.index.sql.nine": "9、使用数据库性能分析工具，定位和解决慢查询、性能瓶颈等问题。",
  "page.index.sql.ten": "10、优化查询语句，避免全表扫描，提高查询效率。",
  "page.index.sql.eleven": "11、避免 SQL 注入等安全威胁。",
  "page.index.sql.twelve": "12、熟悉主从复制、读写分离等技术。",
  "page.index.source": "源码",
  "page.about.one": "在2019年，我毕业于福州理工学院，专业是电子信息工程。刚开始接触编程技术时，我对于对象、类、变量等概念一窍不通，对逻辑实现也感到困扰。我的专业涉及软硬件，包括模电数电、面向对象和嵌入式等方面的学习。一开始，我对电路不够感兴趣，对汇编硬件的学习也没有认真对待，因为我觉得困难度较大，尤其是对一个零基础的人来说。最终，我选择了学习Java面向对象编程。",
  "page.about.two": "我的第一份工作是在福州大学自动化科技部门。那里的技术相对简单，我认为任何具备一些编程知识的人都能胜任这份工作。然而，这份工作对我来说是一次宝贵的经验，因为它真正成为了我职业生涯的起点。随着时间的推移，通过实际操作、查阅资料和解决工作中的问题，我的技术水平明显提升。在熟悉工作一年半后，我开始感到迷茫。这里的技术显得过于基础，继续学习下去不符合我的期望。本应通过程序解决的问题，却在使用存储过程和触发器的方式来处理，让我感到有些脱节。",
  "page.about.three": "后来我加入了一家专注于开发SRM和CRM系统的公司。在这里，我接触到了Spring Boot和Spring Cloud微服务技术，了解了如何使用Nacos进行服务注册、如何引入依赖以实现微服务之间的相互调用，以及在各平台服务调用中使用RabbitMQ作为队列的方式。这里的技术水平并不算太难，主要涉及到表设计以及使用Redis同步锁来防止数据同步中出现不一致的问题。\n\n在CRM和SRM领域，业务逻辑显然更加重要，我花费大部分时间在梳理业务逻辑上。我常常致力于了解权限架构，比如菜单、角色、用户权限，以及表的设计和与按钮权限相关的内容。刚开始，我觉得需求变动较大，需要不断修改代码，但这往往会导致各种问题的反复出现，特别是在修改他人的代码时更为明显。最让人头疼的是一些组件内的jQuery代码，各种约束实现方式导致代码混乱不堪，每个人都往里加一些东西，最终导致谁都看不懂，还有权限冲突不生效等问题，浪费了大量的时间。\n\n如果要接手别人的代码，我认为最好的方式是将每个功能的代码拿出来重新优化一遍，而不是直接开始修改。这样做可以减轻后续优化的负担，尤其是当涉及到大量的权限和业务逻辑时。",
  "page.about.four": "最后，我加入了一家专注于区块链技术的公司。一开始，由于大家普遍认为区块链不稳定且存在风险，我对这个领域缺乏信心。关于这一点，我就不多说了，因为我没有资格去评判。然而，在这里工作让我每天都感到充实。团队成员都追求新技术，经常优化代码，不断磨练已有的代码。每当出现新的技术或项目时，大家都会迫不及待地去研究源代码，并参考实现，我非常喜欢这种氛围。\n\n在这里，我接触的第一个项目是NFT（非同质化代币）项目。虽然我对NFT的价值尚不太清楚，但可能与其独特性和稀缺性有关，这使得它们被认为具有价值。此外，代币作为虚拟创作的货币，就像每个国家都可以发行自己的货币一样，而ERC20技术使得每个人都能够发行代币，其价值当然取决于发行者所创建的代币池。\n\n通过了解Web3的发展、金融应用等方面，我也进行了一些币种的测试，熟悉了相关流程。其中比较有趣的是GameFi，其中NFT作为游戏的核心，代币作为不同用途的货币。NFT每天还可以产生收益代币，尽管我没有亲自参与，但我对这个概念有了一些了解。\n\n接下来，当然就要了解去中心化交易所（DEX），最早接触到的是Uniswap，后来又出现了PancakeSwap。了解这些方面是至关重要的，包括链上的区块、交易等相关信息。",
  "page.about.five": "我现在的工作？",
  "page.about.six": "暂时还在找，有外包活给我或者远程工作可以联系我，有正式聘全职工作也行。",
  "page.about.technology.stack": "技术栈",
  "page.about.cooperate": "合作",
  "page.about.eleven": "你要是觉得我技术能帮助到你，可以直接与我联系。"
}
